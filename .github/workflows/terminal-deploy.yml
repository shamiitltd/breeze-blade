name: Deploy website by SSH

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch: # Manually run this workflow
env:
  DATABASE: ${{ secrets.DB_DATABASE }}
  USERNAME: ${{ secrets.DB_USERNAME }}
  PASSWORD: ${{ secrets.DB_PASSWORD }}

jobs:
  web-deploy:
    name: Terminal Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Get the latest code
        uses: actions/checkout@v3

      - name: Setup PHP 8.1
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - uses: actions/setup-node@master
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18 # You can specify the Node.js version you need

      - name: Install dependencies
        run: npm install

      - name: Build with Vite
        run: npm run build # Use the appropriate build script from your package.json

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Dependencies
        run: composer update --ignore-platform-reqs

      - name: Prepare .env file
        run: |
          sed -i "s/DB_DATABASE=.*/DB_DATABASE=${DATABASE}/" .env
          sed -i "s/DB_USERNAME=.*/DB_USERNAME=${USERNAME}/" .env
          sed -i "s/DB_PASSWORD=.*/DB_PASSWORD=${PASSWORD}/" .env

      - name: Generate key
        run: php artisan key:generate

      - name: Zip the code
        run: zip -r settings.zip .

      - name: Create a Deployment Directory
        run: mkdir deploy

      - name: Move settings.zip to Deployment Directory
        run: mv settings.zip deploy/

      - name: ðŸ“‚ Sync files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./deploy/
          exclude: |
            **/.git*
            **/.git*/**

      - name: Generate SSH Key
        run: |
          mkdir -p ~/.ssh
          ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ""

      - name: Install SSH key
        run: |
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
        env:
          SSH_PRIVATE_KEY: ${{ secrets.RSA_PRIVATE_KEY }}
          
      - name: SSH into the server and unzip settings.zip
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no "shami65i@${{ secrets.FTP_SERVER }}" << 'EOF'
            cd "${{ secrets.FTP_SERVER }}"
            yes | unzip settings.zip -d settings
          EOF
          
      - name: SSH into the server and copy .env files
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no "shami65i@${{ secrets.FTP_SERVER }}" << 'EOF'
            cp settings/.env.example .env.example
            cp settings/.env .env
            cp settings/public/.htaccess .htaccess
            cp settings/.htaccess .htaccess
          EOF
          
      - name: SSH into the server and move files, and run composer install
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no "shami65i@${{ secrets.FTP_SERVER }}" << 'EOF'
            yes | cp -rf settings/* .
            # Remove the 'settings' directory
            rm -rf settings
            php artisan migrate:fresh --force
            # Remove settings.zip
            rm settings.zip
          EOF
